// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mongodb"
  url      = env("DATABASE_URL")
}

model User {
  id             String   @id @default(auto()) @map("_id") @db.ObjectId
  firstName      String
  lastName       String?
  avatarUrl      String?
  phone          String
  email          String   @unique
  hashedPassword String
  admin          Boolean  @default(false)
  createdAt      DateTime @default(now())
  updatedAt      DateTime @updatedAt

  orders Order[]
}

model Order {
  id         String   @id @default(auto()) @map("_id") @db.ObjectId
  userId     String   @db.ObjectId
  productId  String   @db.ObjectId
  color      String
  other      String?
  height     Int
  width      Int
  amount     Int
  price      Float
  totalPrice Float
  confirmed  Boolean  @default(false)
  createdAt  DateTime @default(now())
  updatedAt  DateTime @updatedAt

  product Product @relation(fields: [productId], references: [id])
  user    User    @relation(fields: [userId], references: [id], onDelete: Cascade)
}

model Category {
  id        String    @id @default(auto()) @map("_id") @db.ObjectId
  name      String
  createdAt DateTime  @default(now())
  updatedAt DateTime  @updatedAt
  products  Product[]
}

model Model {
  id        String    @id @default(auto()) @map("_id") @db.ObjectId
  name      String
  createdAt DateTime  @default(now())
  updatedAt DateTime  @updatedAt
  products  Product[]
}

model Color {
  id        String   @id @default(auto()) @map("_id") @db.ObjectId
  name      String
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model Product {
  id         String   @id @default(auto()) @map("_id") @db.ObjectId
  name       String
  categoryId String   @db.ObjectId
  modelId    String   @db.ObjectId
  price      Float
  createdAt  DateTime @default(now())
  updatedAt  DateTime @updatedAt

  images Image[]
  orders Order[]

  colors   String[]
  category Category @relation(fields: [categoryId], references: [id])
  model    Model    @relation(fields: [modelId], references: [id])
}

model Image {
  id        String   @id @default(auto()) @map("_id") @db.ObjectId
  productId String   @db.ObjectId
  product   Product  @relation(fields: [productId], references: [id], onDelete: Cascade)
  url       String
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  @@index([productId])
}
